# Spring Boot application configuration

# Server configuration
# Default port is 5000 for Elastic Beanstalk compatibility
# Can be overridden by SERVER_PORT environment variable
server.port=${SERVER_PORT:5000}

# Application name
spring.application.name=AI Agent Application

# Logging configuration
logging.level.root=INFO
logging.level.org.example=DEBUG

# Jackson configuration for JSON pretty printing
spring.jackson.serialization.indent-output=true

# Multipart file upload configuration
# Maximum file size for individual uploads (10MB)
spring.servlet.multipart.max-file-size=10MB
# Maximum request size for entire multipart request (12MB to allow for metadata)
spring.servlet.multipart.max-request-size=12MB
# Enable multipart file upload support
spring.servlet.multipart.enabled=true
# Temporary file location for multipart uploads
spring.servlet.multipart.location=/tmp

# PDF processing limits configuration
# Maximum number of pages allowed in a PDF document
pdf.processing.max-pages=500
# Maximum text length after extraction (characters)
pdf.processing.max-text-length=50000
# Processing timeout for PDF operations (milliseconds)
pdf.processing.timeout-ms=30000

# Claude API timeout settings
# Connection timeout for Anthropic API calls (milliseconds)
claude.api.connection-timeout-ms=10000
# Read timeout for waiting on Claude responses (milliseconds)
claude.api.read-timeout-ms=120000
# Maximum retries for failed API calls
claude.api.max-retries=3

# SpringDoc OpenAPI / Swagger configuration
# Custom path for Swagger UI (default: /swagger-ui.html)
springdoc.swagger-ui.path=/swagger-ui.html
# API documentation path
springdoc.api-docs.path=/api-docs
# Enable Swagger UI
springdoc.swagger-ui.enabled=true
# Application information for API documentation
springdoc.info.title=AI Agent PDF Processing API
springdoc.info.description=REST API for uploading PDF documents and generating AI-powered recaps using Claude
springdoc.info.version=1.0.0

# Chatbot Configuration
# Copilot Studio iframe URL for the embedded chatbot
chatbot.copilot.studio.url=https://copilotstudio.microsoft.com/environments/Default-f95bef0f-bd04-4167-b6c9-1251a2f5cfd0/bots/cr3e0_theRanaManIsTomCruise/webchat?__version__=2

# Static resources configuration
# Serve static content from /static/** path
#spring.mvc.static-path-pattern=/static/**
# Location of static resources in classpath
#spring.web.resources.static-locations=classpath:/static/

# AWS SES Email Configuration
# Note: Using AWS SES API (not SMTP) with IAM role authentication
# No SMTP configuration needed - using AmazonSimpleEmailService client

# AWS SES Sender Configuration
# Verified sender email address in AWS SES
aws.ses.sender.email=${SES_SENDER_EMAIL}
# Sender display name
aws.ses.sender.name=AI Agent System
# AWS region for SES (must match the SMTP endpoint region)
aws.region=${AWS_REGION:us-east-1}

# Email Service Configuration
# Maximum email size (bytes)
email.max.size=10485760
# Email sending timeout (milliseconds)
email.send.timeout=30000
# Enable email service
email.service.enabled=true

# Image Processing Configuration
# Maximum image file size (10MB)
image.processing.max-size=10485760
# Allowed image MIME types for upload
image.processing.allowed-types=image/jpeg,image/jpg,image/png,image/gif,image/webp
# Processing timeout for image analysis (milliseconds)
image.processing.timeout-ms=30000
# Supported image extensions
image.processing.allowed-extensions=.jpg,.jpeg,.png,.gif,.webp

# Chat Service Configuration
# Maximum message length allowed in chat requests
chat.max.message.length=2000
# Maximum number of files allowed per chat message
chat.max.files.per.message=5
# Session timeout for conversation tracking (minutes)
chat.session.timeout.minutes=30
# Enable chat service
chat.service.enabled=true
# Maximum file size for chat uploads (bytes) - same as general multipart limit
chat.max.file.size=10485760
# Allowed file types for chat uploads (PDFs and images)
chat.allowed.file.types=application/pdf,image/jpeg,image/jpg,image/png,image/gif,image/webp

# Claude API Configuration for Chat Service
# System message for Claude AI chat interactions with tool descriptions
claude.api.system-message=You are a helpful AI assistant with access to specialized tools for document analysis, image analysis, and email sending. \n\nAvailable tools:\n- analyzePdf: For analyzing PDF documents and extracting specific information like VIN numbers, contact details, or general document summaries\n- analyzeImage: For analyzing images and visual content, extracting text, identifying objects, or answering questions about what you see\n- sendPolicyEmail: For sending formatted policy information emails to customers with their policy and vehicle details\n\nUse these tools when users request:\n- PDF analysis, document review, information extraction from PDFs\n- Image analysis, visual content examination, text extraction from images\n- Sending policy emails with customer information (email, name, policy number, VIN)\n\nAlways explain what you're doing and why you're using specific tools. Be conversational and helpful. When you use a tool, describe what you're doing and what the results mean. Maintain context throughout our conversation.

# Claude API processing settings (inherits from existing Main.java configuration)
# Temperature and max-tokens are already configured in the AnthropicChatModel bean
# These are additional chat-specific settings
claude.api.temperature=0.7
claude.api.max-tokens=1000
claude.api.timeout-ms=30000

# Claude conversation memory settings
claude.memory.window-size=20
claude.memory.cleanup-interval-minutes=15