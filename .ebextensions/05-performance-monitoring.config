packages:
  yum:
    amazon-cloudwatch-agent: []
    jq: []
    htop: []
    iotop: []

files:
  # CloudWatch agent configuration
  "/opt/aws/amazon-cloudwatch-agent/etc/cloudwatch-config.json":
    mode: "000644"
    owner: root
    group: root
    content: |
      {
        "metrics": {
          "namespace": "LangChain4j-AI-Agent",
          "metrics_collected": {
            "cpu": {
              "measurement": [
                {"name": "cpu_usage_idle", "rename": "CPU_USAGE_IDLE", "unit": "Percent"},
                {"name": "cpu_usage_active", "rename": "CPU_USAGE_ACTIVE", "unit": "Percent"}
              ],
              "metrics_collection_interval": 60,
              "totalcpu": true
            },
            "mem": {
              "measurement": [
                {"name": "mem_used_percent", "rename": "MEM_USED_PERCENT", "unit": "Percent"},
                {"name": "mem_available_percent", "rename": "MEM_AVAILABLE_PERCENT", "unit": "Percent"}
              ],
              "metrics_collection_interval": 60
            },
            "netstat": {
              "measurement": [
                {"name": "tcp_established", "rename": "TCP_ESTABLISHED", "unit": "Count"},
                {"name": "tcp_time_wait", "rename": "TCP_TIME_WAIT", "unit": "Count"}
              ],
              "metrics_collection_interval": 60
            },
            "procstat": [
              {
                "pattern": "java.*application\\.jar",
                "measurement": [
                  {"name": "cpu_usage", "rename": "JAVA_CPU_USAGE", "unit": "Percent"},
                  {"name": "memory_rss", "rename": "JAVA_MEMORY_RSS", "unit": "Bytes"},
                  {"name": "memory_vms", "rename": "JAVA_MEMORY_VMS", "unit": "Bytes"},
                  {"name": "num_threads", "rename": "JAVA_THREADS", "unit": "Count"}
                ],
                "metrics_collection_interval": 60
              }
            ]
          }
        },
        "logs": {
          "logs_collected": {
            "files": {
              "collect_list": [
                {
                  "file_path": "/var/log/eb-app/gc.log",
                  "log_group_name": "/aws/elasticbeanstalk/langchain4j-ai-agent/gc",
                  "log_stream_name": "{instance_id}-gc",
                  "retention_in_days": 7
                },
                {
                  "file_path": "/var/log/eb-app/application.log",
                  "log_group_name": "/aws/elasticbeanstalk/langchain4j-ai-agent/application",
                  "log_stream_name": "{instance_id}-app",
                  "retention_in_days": 7
                }
              ]
            }
          }
        }
      }

  # JMX monitoring configuration
  "/opt/elasticbeanstalk/tasks/bundlelogs.d/jmx-metrics.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      /var/log/eb-app/jmx-metrics.log

  # Performance monitoring script
  "/opt/elasticbeanstalk/hooks/appdeploy/post/02_start_monitoring.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      # Start CloudWatch agent
      amazon-cloudwatch-agent-ctl \
        -a fetch-config \
        -m ec2 \
        -c file:/opt/aws/amazon-cloudwatch-agent/etc/cloudwatch-config.json \
        -s
      
      # Enable JMX monitoring
      echo "Enabling JMX monitoring..."
      export JAVA_OPTS="$JAVA_OPTS -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      
      # Create performance baseline
      echo "Creating performance baseline..."
      top -b -n 1 > /var/log/eb-app/baseline-top.log
      free -m > /var/log/eb-app/baseline-memory.log
      df -h > /var/log/eb-app/baseline-disk.log

  # Application metrics collection script
  "/usr/local/bin/collect-app-metrics.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      # Collect application-specific metrics
      
      LOG_FILE="/var/log/eb-app/app-metrics.log"
      
      while true; do
        TIMESTAMP=$(date +%Y-%m-%d_%H:%M:%S)
        
        # Get Java process info
        JAVA_PID=$(pgrep -f "java.*application.jar")
        
        if [ -n "$JAVA_PID" ]; then
          # CPU and memory usage
          CPU_USAGE=$(ps -p $JAVA_PID -o %cpu --no-headers)
          MEM_USAGE=$(ps -p $JAVA_PID -o %mem --no-headers)
          THREADS=$(ps -p $JAVA_PID -o nlwp --no-headers)
          
          # JVM heap usage (if JMX is available)
          if command -v jstat &> /dev/null; then
            HEAP_STATS=$(jstat -gc $JAVA_PID 2>/dev/null | tail -1)
          fi
          
          # Log metrics
          echo "$TIMESTAMP CPU:$CPU_USAGE% MEM:$MEM_USAGE% THREADS:$THREADS" >> $LOG_FILE
          
          # Send custom metrics to CloudWatch
          aws cloudwatch put-metric-data \
            --namespace "LangChain4j-AI-Agent" \
            --metric-name "AppCPUUsage" \
            --value $CPU_USAGE \
            --unit Percent \
            --dimensions Instance=$HOSTNAME
        fi
        
        sleep 60
      done

commands:
  01_create_cloudwatch_config:
    command: "mkdir -p /opt/aws/amazon-cloudwatch-agent/etc"

container_commands:
  01_start_metrics_collector:
    command: "nohup /usr/local/bin/collect-app-metrics.sh > /dev/null 2>&1 &"
    leader_only: true